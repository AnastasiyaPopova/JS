'use strict';
'' + 1 + 0; //'10' , т.к. сложение со строкой преобразует все числа в строку
'' - 1 + 0; // -1 , т.к. пустая строка равна нулю и вычитается 0 - 1 = -1
true + false; //1, т.к. false преобразуется в число 1, а true - в 0 = 1 + 0 = 1
6 / '3'; // 2 , т.к. деление вычисляется между числами и строка в данном случае становится числом
'2' * '3'; // 6 , т.к. умножение аналогично делению
4 + 5 + 'px'; // '9px' , т.к. сначала происходит сложение чисел, а потом конкатенация числа и строки
'$' + 4 + 5; // '$45' , т.к. все переводится в строку
'4' - 2; // 2 , т.к. вычитание работает только с числами
'4px' - 2; //Nan , т.к. строка не может преобразоваться в число
7 / 0; //infinity , т.к. деление числа на ноль дает бесконечность
'  -9  ' + 5; // ' -9 5' , т.к. сложение с числом преобразует число в строку
'  -9  ' - 5; // -14 , т.к. вычитание всегда преобразует к числу
null + 1; //1 , т.к. преобразование nul = 0
undefined + 1; //Nan , т.к. undefined становится Nan после численного преобразования
' \t \n' - 2; //-2 , т.к. проблельные символы игнорируются при преобразовании в число, остается только 0 после численного преобразования